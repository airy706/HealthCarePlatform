接口规范:
	返回数据格式
	{
		state:"",  //success || failed
		msg:"",    //信息
		result:{}  //结果数据
	}


+--------------------------------------------------------------------------------------------------+
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|-------------------------------------------###超级管理员模块接口###-----------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
+--------------------------------------------------------------------------------------------------+

1. 登录 url:/login
 	request:
		account
    	password
	response:

2. 创建社区 url:/community/create
	request:
		{communityname:bb, communitytel:1231241, a:12313123123, latitude:11, longtitude:532}
	response:

3. 删除社区 url:/community/del
	request:
		id
	response:

4. 查找社区 url:/community/search
	request:
		key
	response:
		{"state":"success","msg":"","result":[{"communityid":1,"communityname":"bb","communitytel":"1231241","communitylocation":"123","latitude":"11","longtitude":"532","users":[],"notices":[]},{"communityid":3,"communityname":"bb","communitytel":"1231241","communitylocation":"1231312312313132123","latitude":"11","longtitude":"532","users":[],"notices":[]}]}

5. 超管公告添加  url: /notice/create
		request:
		{"userid:1,
		"communityid":2,
		"noticedate":"Dec 27, 2016 10:07:25 PM",
		"noticetitle":"title",
		"noticecontent":"haha",
		"noticetype":1,
		"attachurl":"http://172.0.0.1/"
		}
		response:
		
6. 超管公告删除url： /notice/del
		request:
		id
		response:
		
7. 超管公告编辑  url /notice/create
		request 包含noticeid
		
8. 超管公告查询 
url /notice/admin 超管的公告
url /notice/all    系统所有公告
url /notice/community 某一个社区的公告
	request:  id
	response:

9. 公告置顶 /notice/top 
	request:
		noticeid
	response:
		 

10.公告搜索 url：/notice/search
request:
		key //title or username
		size
		num
response:
		msg:count
		{
		[
			noticeid;
			noticedate;
	 		noticetitle;
			noticecontent;
	 		noticetype;
			attachurl;
	 		userid;
	 		communityid;
	 		username;
	 		communityname;
			url;
	 		isurl;
		]
		}

11.公告详情url:/notice/detail
	request:noticeid
	response:
	{
			noticeid;
			noticedate;
	 		noticetitle;
			noticecontent;
	 		noticetype;
			attachurl;
	 		userid;
	 		communityid;
	 		username;
	 		communityname;
			url;
	 		isurl;
	}
 
12. 公告置顶/取消置顶 /notice/top //返回公告信息的时候都加上state字段 1为置顶，0为正常
	request:
		id
	response
		//置顶改为不置顶，不置顶改为置顶

##节点模块##
1. 获取节点 /node/list
	request:
		size
		num
	response:
		{
			count,
			data:[{
				userid
				username
				communityName
				
				[{
					nodeAddTime
					nodeid,
					nodename,
					nodetype,
				}]	
			}]
		}
		
2. 搜索节点数据 /node/search
	request:
		key
		size
		num
	response:
		{
			count,
			data:[{
				userid
				username
				communityName
				
				[{
				nodeAddTime
					nodeid,
					nodename,
					nodetype,
				}]	
			}]
		}

抛弃接口
# 3. 查看节点数据 /node/data
	# request
		# nodeid
	# reponse
		# [{
			# status_change_time
			# data
		# }]
	
4. 节点数据查看/node/data
	request:
		userid
		sensortype
		startTime
		endTime	
	response:
		msg: 1 数值型 2 文字型
		{
			name, //如心率，坐姿
			valueset, //为文字型时所有可能值
			data:[{
				time: //2016/02/02 12:00:00
				value://具体值，文字型时返回相应文字
			}]
		}

##注册会员管理模块##
1. 列出注册会员的信息 //不包括超级管理员
	request:
		key //根据用户名或身份证号或手机号搜索
		size
		num
	response:
		msg:总计条数
		[{
			id,
			username,
			useridentity,
			useraddress,
			usertel,
			useremail,
			usertype,
			account,
			communityid,
			communityname,
			state  //用户状态 1为冻结 0为正常
		}]

2. 编辑注册会员的信息
	//用户其他的数据不发生改变 
	request:
		id,
		username,
		useridentity,
		useraddress,
		usertel,
		useremail,
		account
	response:
	
3. 删除注册会员的信息 //需要先删除所有有数据约束的相关的信息
	request:
		id
	response:

4. 冻结/恢复 用户信息 //冻结后用户无法进行登录操作
	request:
		id 
	response:
		
##解决方案模块##
1. 添加解决方案 /case/create
	request:
		casetitle
		caseimg
		casecontent
		isshow //是否显示在主页
	response:
		default
		
2. 删除解决方案 /case/del
	request:
		id
	response:
		default
		
3.上传图片 /case/upload
		
4.列出解决方案/case/list
	request：
	response: 
		[{
			caseid
			casetitle
			caseimg
			casecontent
			isshow
		}]

##产品介绍模块##
1. 添加产品介绍/product/create
	request:
		productid
		productimg
		productcontent
		isshow //是否显示在主页
	response:
		default
		
2. 删除产品介绍/product/del
	request:
		id
	response:
		default

3.上传图片 /product/upload	
		
4.列出产品介绍/product/list
	request：
	response: 
		[{
			productid
			casetitle
			caseimg
			casecontent
			isshow
		}]

##社区管理员管理模块##
1. 列出所有社区管理员 /community/manager
	request:
		key //根据用户名或者社区名来筛选
	response:
	[{
		userid
		username
		communityname
		communityId	
		account
		registtime
	}]
	
2. 编辑社区管理员/user/editmanager
	request:
		userid,
		username,
		community.communityid,
		account,
	response:
	
3. 增加社区管理员/user/createmanager
	request:
		username,
		community.communityid,
		account,
		password,
	response:
	
4. 删除社区管理员/user/delmanager
	request:
		userid
	response:
		
	
---------------------------------------------------------------------------------------------

NodeData访问url   http://139.199.76.64:8080/Smatlab/data/uploadnode
request jsonstr 格式：
{"did":"131341413132","sensortype":"1","status_change_time":当前时间就new Date().toString(),"data":"datavalue","nodeid":"1312"}
注意：sensortype：代表此数据的传感器类型
	具体传的值你事先定义好
	比如：1：压力传感器
	     2：心率传感器
	     。。。。
LocationData  url   http://139.199.76.64:8080/Smatlab/data/uploadloc
request jsonstr 格式：
{"did":"1313231312","gps":"address","longtitude":"110","latitude":"110","status_change_time":new Date().toString()}

AlarmData访问  url  http://139.199.76.64:8080/Smatlab/data/uploadalarm
request jsonstr 格式：
{"did":"131313","reasontype":1,"status_change_time":new Date().toString()}
注意：这里reasontype代表哪种异常
比如1：心率
    2：血压
    。。。。
    你可以实现定义好
    
{"did":"131341413132","sensortype":"1","status_change_time":"Dec 27, 2016 4:03:34 PM","nodeid":"123","data":"datavalue"}

---------------------------------------------------------------------------------------------------


//已有所改动，请更新
数据约束：
1.血压


  {"blood":{ "senortype":"4","blood_data":["suo":"xxx","zhang":"xxx"]}}

 
2.人体状态
    {"posture":{"senortype":"6","posture_statue":["正常":"111","长期不动":"222","跌倒":"333","长期剧烈运动":444]}}


3.一键求救
   {"help":{"senortype":"99","help_statue":["正常":"111","求救":"222"]}}


4.心率

    {"cardiotach":{"senortype":"12","current_cardiotach":"xxx"}}

5.轮椅状态
    {"wheelchair":{"senortype":"7","wheelchar_statue":["111","正常"，"222":"右翻,"333":"前翻","444":"后翻","555":"左翻"]}}


6.GPS
    {"gps":{"latitude":"xxx","longitude":"xxx"}}


7.压力坐垫
{"cushion":{"senortype":"3","cushion_statue":["111","直坐"，"222":"左倾,"333":"右倾","444":"前倾","555":"后倾"]}}

超级管理员首页端接口
1. 获取所有在线用户信息/user/online
	request:
		
	response:
		[{
			userid
			username
			communityid
			communityname
			latitude
			longitude
			state //正常状态 异常状态
			usertel
		}]

2. 获取用户详细信息 /user/detail
	request:
		userid
	response:
		{
			userid
			username
			communityid
			communityname
			latitude
			longitude
			state
			usertel
		}

异常消息检测模块
1. 获取所有为解决的异常消息 /alarm/resolved
	request:
	response: //按照时间排列 时间近的优先
		[{
			exceptionId
			exceptionLevel
			exceptionName
			exceptionTime
			exceptionContent //例如:余家头社区的老人王二心率达到了90,请立即查看并采取措施!
		}]
		
2. 检测是否有新的未解决异常发生/alarm/detection
	request:
		exceptionId
	response:  //返回新于所传id的异常的异常
		[{
			exceptionId
			exceptionLevel
			exceptionName
			exceptionTime
			exceptionContent //例如:余家头社区的老人王二心率达到了90,请立即查看并采取措施!
		}]
		
3. 清除异常 /alarm/solve
	request:
		exceptionId
	response:
		
		
上传频率模块:
1. 设置上传频率/user/setf
	request:
		userid
		valid //配置是否生效
		value //限制的值  单位 次/小时
	response:

2. 获取上传频率数据/user/getf
	request:
		key //根据用户名和社区名
		size
		num
	response:
		[{
			userid,
			username,
			community,
			valid,  //默认否
			value
		}]
		
		
		
		





数据模块:
1.获取所有的异常种类/alarm/type
	request:
	response:
		[{
			alarmName,
			alarmType
		}]

2.获取所有的社区 /community/all
	request:
	response:
		[{
			communityid,
			communityname
		}]
		
3.筛选异常数据 /alarm/filter
	request:
		communityId:'1,2,4', //逗号隔开 为空全部
		alarmType:'1,2,3',//逗号隔开  为空全部
		startTime:'2014/02/02'  为空默认最近一周
		endTime:'2015/02/02'
	response:
		{
			names:['社区1','社区2'],
			data:[{
				name:'社区1',
				data:[14,21] //每一天的数据
			}]
		}

url:/alarm/people
4.筛选特定人员异常数据
	request:
		communityId:1,
		userId:'1,2,4', //逗号隔开 为空为社区内的全部人员
		alarmType:'1,2,3',//逗号隔开  为空全部
		startTime:'2014/02/02'  为空默认最近一周
		endTime:'2015/02/02'
	response:
		{
			names:['张三','李四'],
			data:[{
				name:'张三',
				data:[14,21] //每一天的数据
			}]
		}

5. 获取所有异常分布 /alarm/times
	request:
	response:
	[{
		alarmName,  //异常名称
		alarmTimes, //异常次数
	}]

url:/community/userlist
6. 获取社区所有的成员

	request:
		communityid
	response:
	[{
		userid,
		username
	}]

普通用户模块
1. 获取节点首页数据/user/home
	request:
	response:
		[{
			nodeType,
			nodeName,
			lastestData,
			high,
			low,
			lastestTime,
			highTime,
			lowTime
		}]

2. 获取用户公告/notice/user
	request:
	response:
		[{
			noticeid,
			noticedate,
			noticetitle,
			isurl //公告是否为url型
			url //如果是url类型链接返回url
		}]






+--------------------------------------------------------------------------------------------------+
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|-------------------------------------------###网站主页模块接口###------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
+--------------------------------------------------------------------------------------------------+

## 首页模块 ##
1. 注册/regist
	request:
		username
		password
		account
		useridentity
	response:
	
2. 登录/login
	request:
		account
		password
	response:
		userid
		typeid
		username

3. 获取应当显示在首页的产品介绍/productintro
	request
	response:
		[{
			title
			image
			content
		}]
		
4. 获取应当显示在首页的解决方案/casesolution
	request
	response:
		[{
			title
			image
			content
		}]
		
5. 获取应当在首页显示的公告/broadcast
	request:
	response:
		[{
			id,
			title,
			isurl,
			url,
			time
		}]	

+--------------------------------------------------------------------------------------------------+
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|-------------------------------------------###普通用户角色接口###------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
+--------------------------------------------------------------------------------------------------+


## 咨询服务模块 ##
0.获取所有服务类型/consult/type
	request:
		communityId
	response:
		typeid //类型id
		typename //类型值
0.5 获取所有可咨询的人（返回社区管理员）/consult/toask
	request:
		communityId
	response:  //新建一张社区咨询人表
		[{
			userid,
			username
		}]
1.新增咨询服务/consult/create
	request:
		toaks.userid //咨询人id
		consulttype.typeid //咨询类型
		content //咨询内容
		user.userid //发出咨询用户的id
	response:
		
2.编辑咨询服务/consult/edit
	request:
		consultid
		toask.userid //咨询人id
		consulttype.typeid //咨询类型
		content //咨询内容
	response:
		
3. 获取所有未完成咨询服务/consult/undo
	request:
	response:
		[{
			consultId
			consultUserId //咨询人id
			typeId
			consultType //咨询类型
			content //咨询内容
		}]
4. 获取所有已完成咨询服务/consult/done
	request:
	response:
		[{
			consultId
			consultUserId //咨询人id
			consultType //咨询类型
			content //咨询内容
		}]
		
5. 删除咨询服务/consult/del
	request:
		consultId
	response:
		
6. 完成咨询服务/consult/finish
	request:
		consultId
	response:
		
		
##个人信息修改模块##
1. 上传头像               /user/avatar
	request
		file //头像文件
	response
		url
2. 获取个人信息   /user/info
	request
	response
		username
		identity
		gender
		avatar
		useremail
		usertel
		address
		communityid
		communityname
		
3. 密码校对 /user/psdcheck
	request:
		oldPassword
		newPassword
	response:		

4. 修改个人信息/user/edit
	request
		gender
		avatar
		useremail
		usertel
		useraddress
		community.communityid
		password //不修改传空字符串
	response

5. 添加紧急联系人 /linkman/create
	request:
		relationname //联系人姓名
		relationtel //联系人电话
		relationaccount
		relationpassword
	response

6. 列出紧急联系人: /linkman/list
	request:
	response:
		[{
			relationid, //紧急联系人id
			relationname //联系人姓名
			relationtel //联系人电话
			relationaccount
			# relationpassword	
		}]
		
7. 编辑紧急联系人 /linkman/edit
	request:
			relationid, //紧急联系人id
			relationname //联系人姓名
			relationtel //联系人电话
			relationaccount
			relationpassword
	response
	
8. 删除紧急联系人 /linkman/del
	request:
		relationid //紧急联系人id
	response

9.验证码发送 /user/psdback
request:
		did:
		way:"tel"or"email"
response:
		
10.验证码验证 /user/checkcode
	request:
		did:
		code:
	response:
		

##节点数据部分##
1.列出个人用户所有节点/user/node
	request：	
	response：
		[{
			nodetype
			nodename
		}
		]	

+--------------------------------------------------------------------------------------------------+
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|-------------------------------------------###社区管理员端接口###------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
+--------------------------------------------------------------------------------------------------+

##异常消息检测模块##
1. 获取社区所有为解决的异常消息 /alarm/resolved
	request:
		communityId
	response: //按照时间排列 时间近的优先
		[{
			exceptionId
			exceptionLevel
			exceptionName
			exceptionTime
			exceptionContent //例如:余家头社区的老人王二心率达到了90,请立即查看并采取措施!
		}]
		
2. 检测社区是否有新的未解决异常发生/alarm/detection
	request:
		communityId
		exceptionId
	response:  //返回新于所传id的异常的异常
		[{
			exceptionId
			exceptionLevel
			exceptionName
			exceptionTime
			exceptionContent //例如:余家头社区的老人王二心率达到了90,请立即查看并采取措施!
		}]
	
##首页地图信息模块##
1. 获取社区所有在线用户信息/user/online
	request:
		communityId
	response:
		[{
			userid
			username
			communityid
			communityname
			latitude
			longitude
			state //正常状态 异常状态
			usertel
		}]

<<<<<<< HEAD
=======

>>>>>>> dd0d16d067713e85c694c06e4713a88e82d4b815
2. 获取社区的地址位置/community/location
	request:
		communityid
	response:
		latitude
		longitude

##上传频率设置模块##
1. 获取社区上传频率数据/user/getf
	request:
		communityId
		key //根据用户名
		size
		num
	response:
		[{
			userid,
			username,
			community,
			valid,  //默认否
			value
		}]


##节点管理模块##
节点模块
1. 获取社区节点 /node/list
	request:
		communityId
		size
		num
	response:
		{
			count,
			data:[{
				userid
				username
				communityName
				
				[{
					nodeAddTime
					nodeid,
					nodename,
					nodetype,
				}]	
			}]
		}
		
2. 搜索社区节点数据 /node/search
	request:
		communityId
		key //只根据用户名
		size
		num
	response:
		{
			count,
			data:[{
				userid
				username
				communityName
				
				[{
				nodeAddTime
					nodeid,
					nodename,
					nodetype,
				}]	
			}]
		}
		
##咨询服务模块##
1. 获取社区的咨询类型 /consult/type
	request:
		communityid
		key: '' //服务名称
	response:
		[{
			typeid,
			typename	
		}]
		
2. 删除社区咨询 /consult/typedel
	request:
		typeid
	response:
		
3. 新增／修改社区服务   /consult/create
	request:
		community.communityid
		typeid, //
		typename,
	response
	
4. 列出社区咨询详细信息 /consult/list
	request:
		key, //用户名
		communityid,
		size,
		num,
	response: //按照时间顺序降序排列
		msg://总记录条数
		[{
			consultId,
			username,
			consultType,
			content,
			toaskName,//咨询人姓名
			commitTime,
			isFinish,
			finishTime
		}]
		
5. 完成咨询信息  /consult/finish
	request:
		consultId
	response: //后台填充完成时间
	
6. 删除咨询信息/consult/del
	request:
		consultId
	response:
		

+--------------------------------------------------------------------------------------------------+
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|-------------------------------------------###手机端接口###-----------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
+--------------------------------------------------------------------------------------------------+

1.添加节点接口/node/add
	request：
		nodetype:
		did:
	response：	

2.手机获取频率/user/frequency
	request:
		did
	respone:
		{
		state:"",  //success || failed
		msg:frequency,    //信息
	}
3.手机端登陆/user/mobilelogin
	request：
		account
		password
	response:
		{
		username,
		did,
		nodes:[
		{
		nodeid;
	    nodename;
	    nodetype;
	    nodeaddtime;
	    frequency;
		}
		]
		}

4.用户未解决异常/user/undoalarm
	request:
		did
	response:
	{"state":"success",
	"msg":"",
	"result":[{"dataid":11,
	"did":"111111",
	"reasontype":6,
	"status_change_time":"2017-01-13 13:26:33",
	"hasresloved":0,
	"level":3,
	"data":"跌倒"},
	{"dataid":3,
	"did":"111111",
	"reasontype":99,
	"status_change_time":"2017-01-09 12:32:58",
	"hasresloved":0,
	"level":1,
	"data":"111"}]}

5.清除异常 /alarm/solve
	request:
		exceptionId
	response:

+--------------------------------------------------------------------------------------------------+
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|-------------------------------------------###微信端接口###-----------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------|
+--------------------------------------------------------------------------------------------------+
【字段自己用浏览器访问查看】
1. 获取最新一次个人用户的数据
	/weixin/latest
	request:
		userid
	response:
		//各项最新数据
2. 检测当前是否发生异常的接口
	/weixin/alarminfo
	request:
		userid
	response:
		//是否有异常 ，异常类型，异常值
3. 检测当天是否有公告
	/weixin/notice
	request:
		
	response:
		//返回当天公告的各项信息



3.12 后接口
验证码 注册 和修改密码两处
用户下载附件资源：/user/download
		request:
			url 资源路径
		response:
			。。
用户密码丢失发送验证码：/user/psdback
		request:
			did:
			way: tel|email
		response:
			。。
验证验证码：/user/checkcode
		request:
			did:
			code：
		response:
			。。
修改密码：/user/changepsd
		request:
			did:
			code：
			password:
		response:
			。。
发送手机验证码注册时：/sendtelcode
		request:
			tel:
		response:
			。。
验证手机验证码：/checktel
		request:
			tel:
			code：
		response:
			。。
返回所有经纬度不为空的社区：/community/list 
		request：
		response：
